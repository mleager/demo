name: Deploy Terraform - Development

on:
  pull_request:
    branches:
      - development
    types: [opened, synchronize, reopened]

  push:
    branches:
      - development

env:
  ENVIRONMENT: development

jobs:
  terraform-plan:
    # only run plan on PR
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    environment: development
    defaults:
      run:
        working-directory: ./terraform

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.12.1

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.OIDC_ROLE_ARN }}
          aws-region: us-east-1

      - name: Terraform Init
        run: terraform init

      - name: Terraform Validate
        run: terraform validate

      - name: Terraform Plan
        id: plan
        run: terraform plan \
          -var-file=terraform.tfvars.${{ env.ENVIRONMENT }} \
          -out=tfplan

      - name: Comment PR with Plan
        uses: actions/github-script@v7
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const output = `#### Terraform Plan ðŸ“–
            <details><summary>Show Plan</summary>

            \`\`\`terraform
            ${{ steps.plan.outputs.stdout }}
            \`\`\`

            </details>`;

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            })

  terraform-apply:
    # only run apply on push (after merge)
    if: github.event_name == 'push'
    runs-on: ubuntu-latest
    environment: development
    defaults:
      run:
        working-directory: ./terraform

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.12.1

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.OIDC_ROLE_ARN }}
          aws-region: us-east-1

      - name: Terraform Init
        run: terraform init

      - name: Terraform Plan
        run: terraform plan \
          -var-file=terraform.tfvars.${{ env.ENVIRONMENT }} \
          -out=tfplan

      - name: Terraform Apply
        run: terraform apply tfplan -auto-approve

